---
title: "tidytuesday: Oregon Spotted Frog"
author: "Sam Muir"
format: html
---

This analysis and visualization was made for [tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-08-02). 

```{r}
library(tidyverse)
library(janitor)
```

```{r}
# Get the Data
frogs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-08-02/frogs.csv') %>%
  clean_names() %>%  
  mutate(sex = ifelse(female == 1, "female", "male"),
         hab_type = as.factor(hab_type))


# add font ----------------------------------------------------------------
sysfonts::font_add_google(name = "Roboto", family = "Roboto")
font <- "Roboto"

# turn on showtext --------------------------------------------------------
showtext::showtext_auto()


frogs_clean <- frogs %>%
  mutate(sex = ifelse(female == 1, "female", "male")) %>%
  group_by(sex, hab_type) %>%
  summarise(sum = n())
```

```{r}
ggplot(frogs_clean, aes(x = hab_type, y = sum, fill = sex)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = c("cornflowerblue", "seagreen")) +
  theme_minimal() +
  theme(text = element_text(size = 8, family = font, color = "#000000"),
        plot.title = element_text(family = font, size = 30, hjust = 0.5, face = "bold"),
        plot.title.position = "plot",
        plot.subtitle = element_text(family = font, size = 10, hjust = 0.5, lineheight = 1.1),
        plot.caption = element_text(hjust = 0.5, size = 8),
        axis.text = element_text(size = 11, family = font, color = "#000000"),
        axis.title.y = element_text(size = 13), 
        axis.title.x = element_blank(), 
        legend.position = "top",
        legend.title = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.y = element_line(color = "#000000", linewidth = 0.25),
        axis.line.x.bottom = element_line(color = "#000000", linewidth = 0.35),
        plot.margin = unit(c(2, 2, 2, 2), "cm"),
        plot.background = element_rect(color = "#FDFBF7", fill = "#FDFBF7")) +
  labs(title = "Habitat of the Oregon Spotted Frog", subtitle = "Data collected by the USGS September to November 2018 at the Crane Prairie Reservoir in Oregon, USA\n", y = "Number of frogs\n", caption = "\nData: usgs.gov | Sam Muir | tidytuesday")
```


Crane Prairie Reservoir in Oregon, USA.

```{r}
library(terra)
library(sf)
library(leaflet)
library(htmltools)
library(plotly)

#Conversion of data frame to sf object
frogs_sf <- st_as_sf(x = frogs,                         
                  coords = c("utme_83", "utmn_83"),
                  crs = "+proj=utm +zone=10")

#Projection transformation
frogs_sf <- st_transform(frogs_sf, crs = "+proj=longlat +datum=WGS84")
```


```{r}
pal <-colorFactor(c("#01377D", "#588BAE", "#26B170"), domain = frogs_sf$hab_type) # define color palette

labels <- sprintf(frogs_sf$sex) %>% 
  lapply(htmltools::HTML)

leaflet() %>%
  addCircleMarkers(data = frogs_sf, # add centroids to map
             color = ~pal(frogs_sf$hab_type),
             radius = 0.25,
             opacity = 1,
             label = labels) %>%
  addLegend(pal = pal, # legend for centroids
            values = frogs_sf$hab_type,
            opacity = 1,
            position = "bottomright") %>%
  addScaleBar() %>%
  addTiles() # basemap
```


